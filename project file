<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' https://www.googletagmanager.com; frame-src 'self' https://www.youtube.com">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="Algorithmic Topology Project by Harsh Raj Kumar – Detailed insights into topological algorithms for data analysis.">
  <title>Algorithmic Topology | Harsh Raj Kumar</title>
  
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;600&family=IBM+Plex+Mono:wght@400;600&display=swap" as="style">
  <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;600&family=IBM+Plex+Mono:wght@400;600&display=swap" rel="stylesheet">
  <link rel="preload" href="../styles.css" as="style">
  <link rel="stylesheet" href="../styles.css">
</head>
<body>
  <!-- SVG Symbols for Toggle -->
  <svg display="none">
    <symbol id="light" viewBox="0 0 24 24">
      <g stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="12" y1="16" x2="12" y2="19" transform="rotate(0,12,12)" />
        <line x1="12" y1="16" x2="12" y2="19" transform="rotate(45,12,12)" />
        <line x1="12" y1="16" x2="12" y2="19" transform="rotate(90,12,12)" />
        <line x1="12" y1="16" x2="12" y2="19" transform="rotate(135,12,12)" />
        <line x1="12" y1="16" x2="12" y2="19" transform="rotate(180,12,12)" />
        <line x1="12" y1="16" x2="12" y2="19" transform="rotate(225,12,12)" />
        <line x1="12" y1="16" x2="12" y2="19" transform="rotate(270,12,12)" />
        <line x1="12" y1="16" x2="12" y2="19" transform="rotate(315,12,12)" />
      </g>
      <circle fill="currentColor" cx="12" cy="12" r="4" />
    </symbol>
    <symbol id="dark" viewBox="0 0 24 24">
      <path fill="currentColor" d="M15.5,15c-3.2-0.6-5.8-3.2-6.3-6.2C8.9,7,9.2,5.2,10,3.8c0.5-0.9-0.3-1.8-1.2-1.5C4.5,3.8,1.6,7.8,1.8,12.5c0.2,5.3,4.6,9.7,9.9,9.9c4.7,0.2,8.9-2.7,10.3-6.9c0.3-0.9-0.6-1.8-1.5-1.3C19,15,17.2,15.3,15.5,15z" />
    </symbol>
  </svg>

  <!-- Toggle Switch -->
  <div class="theme-switch">
    <label class="switch">
      <input class="switch__input" type="checkbox" role="switch" id="switch" name="dark" />
      <svg class="switch__icon switch__icon--outer" width="10px" height="10px" aria-hidden="true">
        <use href="#light" />
      </svg>
      <svg class="switch__icon switch__icon--outer" width="10px" height="10px" aria-hidden="true">
        <use href="#dark" />
      </svg>
      <span class="switch__inner">
        <span class="switch__gradient"></span>
      </span>
      <span class="switch__inner-icons">
        <svg class="switch__icon switch__icon--inner" width="10px" height="10px" aria-hidden="true">
          <use href="#light" />
        </svg>
        <svg class="switch__icon switch__icon--inner" width="10px" height="10px" aria-hidden="true">
          <use href="#dark" />
        </svg>
      </span>
      <span class="switch__sr">Dark Mode</span>
    </label>
  </div>

  <div class="content-wrapper">
    <nav class="toc-nav">
      <h3>Table of Contents</h3>
      <ul>
        <li><a href="#introduction">Introduction to Algorithmic Topology</a></li>
        <li><a href="#mathematical-foundation">Mathematical Foundation</a></li>
        <li><a href="#demo-video">Demo Video</a></li>
        <li><a href="#implementation">Implementation Details</a></li>
        <li><a href="#challenges">
          Challenges in Topological Data Analysis
          <ul>
            <li><a href="#computational-complexity">1. Computational Complexity</a></li>
            <li><a href="#data-scaling">2. Data Scaling</a></li>
            <li><a href="#visualization">3. Visualization</a></li>
          </ul>
        </a></li>
        <li><a href="#practical-applications">
          Practical Applications
          <ul>
            <li><a href="#machine-learning">1. Machine Learning</a></li>
            <li><a href="#bioinformatics">2. Bioinformatics</a></li>
            <li><a href="#network-analysis">3. Network Analysis</a></li>
          </ul>
        </a></li>
        <li><a href="#conclusion">Conclusion</a></li>
      </ul>
    </nav>
    <div class="main-content">
      <header>
        <div class="header-meta">
          <a href="/projects/index.html" class="back-link">← All Projects</a>
          <div class="meta-info">
            <span class="publish-date">Published: March 22, 2025</span>
            <span class="reading-time">Reading Time: 10 min</span>
          </div>
        </div>
        <hr class="header-divider">
        <div class="title-with-repo">
          <h1>Algorithmic Topology</h1>
          <a href="https://github.com/eightharsh/algorithmic-topology" target="_blank" rel="noopener noreferrer" class="repo-link" aria-label="GitHub Repository">
            <svg class="repo-icon" aria-hidden="true" viewBox="0 0 24 24" fill="currentColor">
              <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z"/>
            </svg>
          </a>
        </div>
        <div class="abstract">
          <h2>Abstract</h2>
          <p>This project explores topological algorithms for data analysis, focusing on persistent homology and mapper algorithms. It implements solutions for clustering and visualization of high-dimensional data, with practical applications in machine learning, bioinformatics, and network analysis. We discuss the mathematical foundation, implementation challenges, and real-world use cases.</p>
        </div>
      </header>
      <section id="introduction">
        <h2>Introduction to Algorithmic Topology</h2>
        <p>Algorithmic Topology is a field that combines topology—a branch of mathematics concerned with the properties of space that are preserved under continuous deformations—with computational techniques to analyze data. This project focuses on Topological Data Analysis (TDA), a method that uses topological concepts to extract meaningful patterns from complex, high-dimensional datasets.</p>
        <p>The primary tools in this project are persistent homology, which identifies features like clusters, loops, and voids across multiple scales, and the mapper algorithm, which creates a simplified graph representation of high-dimensional data for visualization.</p>
      </section>
      <section id="mathematical-foundation">
        <h2>Mathematical Foundation</h2>
        <p>Persistent homology is based on the concept of simplicial complexes—structures built from points (0-simplices), edges (1-simplices), triangles (2-simplices), and higher-dimensional analogs. Given a dataset, we construct a filtration, a sequence of simplicial complexes indexed by a parameter (e.g., distance threshold), and track the birth and death of topological features.</p>
        <p>The persistence diagram summarizes these features, where each point \((b, d)\) represents a feature that appears at scale \(b\) and disappears at scale \(d\). The persistence of a feature is \(d - b\), indicating its significance.</p>
        <pre class="math-equation">
Persistence = d - b
        </pre>
        <p>The mapper algorithm, on the other hand, applies a filter function (e.g., density) to the data, covers the filter space with overlapping intervals, clusters the data within each interval, and constructs a graph where nodes represent clusters and edges represent shared points.</p>
      </section>
      <section id="demo-video">
        <h2>Demo Video</h2>
        <p class="project-description">Watch a demo of the algorithmic topology project in action, showcasing how TDA can be used to analyze data.</p>
        <div class="video-container" data-video-id="VIDEO_ID_3" data-video-title="Algorithmic Topology Demo - Harsh Raj Kumar"></div>
      </section>
      <section id="implementation">
        <h2>Implementation Details</h2>
        <p>We implemented persistent homology using the Ripser library in Python, which efficiently computes persistence diagrams for large datasets. The implementation involves constructing a Vietoris-Rips complex, a type of simplicial complex where a simplex is included if all pairs of its vertices are within a certain distance.</p>
        <pre class="code-snippet">
# Computing persistent homology with Ripser
from ripser import ripser
import numpy as np

data = np.random.rand(100, 2)  # Synthetic 2D data
diagrams = ripser(data)['dgms']
        </pre>
        <p>For the mapper algorithm, we used the KeplerMapper library to create a graph representation of the data, which was then visualized using Matplotlib. The process involves selecting a filter function, clustering the data, and mapping the clusters into a graph.</p>
      </section>
      <section id="challenges">
        <h2>Challenges in Topological Data Analysis</h2>
        <p>TDA presents several challenges that we addressed in this project:</p>
        <section id="computational-complexity">
          <h3>1. Computational Complexity</h3>
          <p>Computing persistent homology is computationally expensive, especially for large datasets. The time complexity of constructing a Vietoris-Rips complex is \(O(n^2)\), where \(n\) is the number of data points. We mitigated this by using Ripser, which employs optimizations like sparse matrix representations.</p>
        </section>
        <section id="data-scaling">
          <h3>2. Data Scaling</h3>
          <p>Scaling TDA to massive datasets requires careful preprocessing. We applied dimensionality reduction techniques like PCA before computing homology to reduce the computational load while preserving topological features.</p>
        </section>
        <section id="visualization">
          <h3>3. Visualization</h3>
          <p>Interpreting the results of TDA, such as persistence diagrams and mapper graphs, can be challenging for non-experts. We addressed this by creating interactive visualizations using Plotly, allowing users to explore the topological features dynamically.</p>
        </section>
      </section>
      <section id="practical-applications">
        <h2>Practical Applications</h2>
        <p>Algorithmic Topology has a wide range of applications across various domains:</p>
        <section id="machine-learning">
          <h3>1. Machine Learning</h3>
          <p>TDA can improve machine learning models by providing features that capture the shape of data. For example, persistent homology can identify clusters and loops in data, which can be used as features for classification tasks.</p>
        </section>
        <section id="bioinformatics">
          <h3>2. Bioinformatics</h3>
          <p>In bioinformatics, TDA has been used to analyze the structure of proteins and gene expression data. The mapper algorithm can reveal patterns in high-dimensional biological data, such as identifying subtypes of diseases.</p>
        </section>
        <section id="network-analysis">
          <h3>3. Network Analysis</h3>
          <p>TDA can analyze the topology of networks, such as social networks or communication networks, by identifying communities and cycles. Persistent homology can detect robust structures in noisy network data.</p>
        </section>
      </section>
      <section id="conclusion">
        <h2>Conclusion</h2>
        <p>The Algorithmic Topology project demonstrates the power of topological methods in data analysis. By implementing persistent homology and the mapper algorithm, we were able to extract meaningful patterns from high-dimensional data, addressing challenges like computational complexity and visualization. The applications in machine learning, bioinformatics, and network analysis highlight the versatility of TDA, making it a valuable tool for modern data science.</p>
      </section>
    </div>
  </div>
  <footer class="footer">
    <div class="footer-copy">© <span id="copyright-year"></span> HARSH RAJ KUMAR</div>
    <div class="footer-social">
      <a href="https://github.com/eightharsh" target="_blank" rel="noopener noreferrer" aria-label="GitHub"><svg class="icon" aria-hidden="true" viewBox="0 0 24 24" fill="currentColor"><path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z"/></svg></a>
      <a href="https://linkedin.com/in/eightharsh" target="_blank" rel="noopener noreferrer" aria-label="LinkedIn"><svg class="icon" aria-hidden="true" viewBox="0 0 24 24" fill="currentColor"><path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/></svg></a>
      <a href="https://x.com/eightharsh" target="_blank" rel="noopener noreferrer" aria-label="X (Twitter)"><svg class="icon" aria-hidden="true" viewBox="0 0 24 24" fill="currentColor"><path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/></svg></a>
      <a href="mailto:interact.harsh@gmail.com" aria-label="Email"><svg class="icon" aria-hidden="true" viewBox="0 0 24 24" fill="currentColor"><path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/></svg></a>
    </div>
  </footer>
  <script src="../script.js" defer></script>
</body>
</html>






:root {
  --bg-color: #ffffff;
  --text-color: #161616;
  --text-secondary: #525252;
  --accent-color: #0f62fe;
  --accent-color-rgb: 15, 98, 254;
  --surface-color: #e0e0e0;
  --font-sans: 'IBM Plex Sans', sans-serif;
  --font-mono: 'IBM Plex Mono', monospace;
  --content-max-width: 1000px;
  --main-width: 700px;
  --toc-width: 180px;
  --trans-dur: 0.4s;
  --trans-timing: cubic-bezier(0.68, -0.55, 0.27, 1.55);
}

[data-theme="dark"] {
  --bg-color: #161616;
  --text-color: #ffffff;
  --text-secondary: #b3b3b3;
  --accent-color: #4589ff;
  --accent-color-rgb: 69, 137, 255;
  --surface-color: #333333;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
  transition: background-color var(--trans-dur) ease, color var(--trans-dur) ease;
  will-change: background-color, color;
}

body {
  font-family: var(--font-sans);
  line-height: 1.5;
  background-color: var(--bg-color);
  color: var(--text-color);
  margin: 0;
  padding: 2rem;
  transition: background-color var(--trans-dur) ease, color var(--trans-dur) ease;
  will-change: background-color, color;
}

.content-wrapper {
  display: flex;
  max-width: var(--content-max-width);
  margin: 0 auto;
  align-items: flex-start;
  gap: 0;
}

.toc-nav {
  width: var(--toc-width);
  position: sticky;
  top: 2rem;
  max-height: calc(100vh - 4rem);
  overflow-y: auto;
  padding-right: 0.5rem;
}

.toc-nav h3 {
  font-size: 0.75rem;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  margin-bottom: 0.75rem;
  transition: color var(--trans-dur) ease;
}

.toc-nav ul {
  list-style: none;
  padding: 0;
}

.toc-nav ul li {
  margin-bottom: 0.25rem;
}

.toc-nav ul li a {
  font-size: 0.75rem;
  color: var(--text-color);
  text-decoration: none;
  transition: color var(--trans-dur) ease;
  display: block;
  line-height: 1.2;
}

.toc-nav ul li a:hover {
  color: var(--accent-color);
}

.toc-nav ul li a.active {
  color: var(--accent-color);
  font-weight: 500;
}

.toc-nav ul ul {
  padding-left: 0.75rem;
  margin-top: 0.25rem;
}

.toc-nav ul ul li a {
  font-size: 0.7rem;
}

.main-content {
  flex: 1;
  max-width: var(--main-width);
}

.main-content header {
  margin-bottom: 2rem;
}

.header-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.meta-info {
  display: flex;
  gap: 1rem;
  font-size: 0.75rem;
  color: var(--text-secondary);
  text-transform: uppercase;
  transition: color var(--trans-dur) ease;
}

.publish-date,
.reading-time {
  display: inline-block;
}

.header-divider {
  border: 0;
  border-top: 1px solid var(--surface-color);
  margin: 1rem 0;
  transition: border-color var(--trans-dur) ease;
}

.back-link {
  display: inline-block;
  font-size: 0.75rem;
  color: var(--accent-color);
  text-decoration: none;
  transition: color var(--trans-dur) ease;
}

.back-link:hover {
  text-decoration: underline;
}

.title-with-repo {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

h1 {
  font-size: 2.5rem;
  letter-spacing: -0.05em;
  line-height: 1.2;
  margin: 0;
  font-weight: 700;
}

.repo-link {
  color: var(--text-secondary);
  text-decoration: none;
  transition: color var(--trans-dur) ease, transform 0.2s ease;
}

.repo-link:hover {
  color: var(--accent-color);
  transform: scale(1.1);
}

.repo-icon {
  width: 1.5rem;
  height: 1.5rem;
  vertical-align: middle;
}

h2 {
  font-size: 1.75rem;
  line-height: 1.3;
  margin: 2rem 0 1rem;
  font-weight: 600;
}

h3 {
  font-size: 1.25rem;
  line-height: 1.3;
  margin: 1.5rem 0 0.75rem;
  font-weight: 600;
}

h1, h2, h3 {
  font-family: var(--font-sans);
  color: var(--text-color);
  transition: color var(--trans-dur) ease;
}

.abstract {
  margin: 1rem 0;
}

.abstract h2 {
  font-size: 1.25rem;
  margin-bottom: 0.5rem;
}

.abstract p {
  font-size: 0.875rem;
  color: var(--text-secondary);
  font-style: italic;
  transition: color var(--trans-dur) ease;
}

section p {
  font-size: 1rem;
  color: var(--text-secondary);
  margin-bottom: 1rem;
  transition: color var(--trans-dur) ease;
}

[data-theme="dark"] section p {
  color: var(--text-secondary);
}

section ul {
  list-style-type: disc;
  padding-left: 1.5rem;
  margin-bottom: 1rem;
}

section ul li {
  font-size: 1rem;
  color: var(--text-secondary);
  transition: color var(--trans-dur) ease;
}

.math-equation {
  font-family: var(--font-mono);
  font-size: 0.875rem;
  background-color: var(--surface-color);
  padding: 1rem;
  border-radius: 4px;
  white-space: pre;
  overflow-x: auto;
  transition: background-color var(--trans-dur) ease;
  text-align: center;
}

.file-structure {
  font-family: var(--font-mono);
  font-size: 0.875rem;
  background-color: var(--surface-color);
  padding: 1rem;
  border-radius: 4px;
  white-space: pre;
  overflow-x: auto;
  transition: background-color var(--trans-dur) ease;
}

.code-snippet {
  font-family: var(--font-mono);
  font-size: 0.875rem;
  background-color: var(--surface-color);
  padding: 1rem;
  border-radius: 4px;
  white-space: pre;
  overflow-x: auto;
  transition: background-color var(--trans-dur) ease;
}

.project-description {
  font-size: 0.9rem;
  color: var(--text-secondary);
  margin: 0.5rem 0 1rem;
  font-style: italic;
  transition: color var(--trans-dur) ease;
}

.video-container {
  position: relative;
  padding-bottom: 56.25%; /* 16:9 aspect ratio (9/16 = 0.5625) */
  height: 0;
  overflow: hidden;
  margin: 1rem 0;
  border-radius: 8px;
  border: 1px solid var(--surface-color);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  transition: border-color var(--trans-dur) ease, box-shadow 0.3s ease, transform 0.3s ease;
}

.video-container:hover {
  box-shadow: 0 6px 16px rgba(var(--accent-color-rgb), 0.2);
  transform: translateY(-2px);
}

.video-container.playing {
  animation: playFade 0.5s ease-in-out;
}

.video-container iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: none;
}

.video-thumbnail {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center;
  cursor: pointer;
}

.play-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.6);
  border: none;
  border-radius: 50%;
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.3s ease;
}

.play-button:hover {
  background: rgba(0, 0, 0, 0.8);
  transform: translate(-50%, -50%) scale(1.1);
}

.play-button svg {
  width: 24px;
  height: 24px;
  fill: #ffffff;
}

[data-theme="dark"] .video-container {
  border-color: var(--surface-color);
  box-shadow: 0 4px 12px rgba(255, 255, 255, 0.1);
}

[data-theme="dark"] .video-container:hover {
  box-shadow: 0 6px 16px rgba(var(--accent-color-rgb), 0.3);
}

@keyframes playFade {
  0% {
    opacity: 0.8;
    transform: scale(0.98);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

footer.footer {
  max-width: var(--main-width);
  margin: 2rem auto 0;
  margin-left: calc((100% - var(--content-max-width)) / 2 + var(--toc-width));
  border-top: 1px solid var(--surface-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 2rem;
  transition: border-color var(--trans-dur) ease;
}

.footer-copy {
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  color: var(--text-secondary);
  transition: color var(--trans-dur) ease;
}

.footer-social {
  display: flex;
  gap: 1rem;
  align-items: center;
}

.footer-social a {
  color: var(--accent-color);
  text-decoration: none;
  transition: color var(--trans-dur) ease, transform 0.2s ease;
}

.footer-social a:hover {
  transform: scale(1.1);
}

.footer-social .icon {
  width: 1rem;
  height: 1rem;
  vertical-align: middle;
}

.theme-switch {
  position: fixed;
  top: 1rem;
  right: 1rem;
  z-index: 1000;
}

.switch {
  position: relative;
  display: inline-block;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.switch__input {
  display: block;
  width: 40px;
  height: 20px;
  background-color: var(--bg-color);
  border-radius: 20px;
  box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.1), inset 0 -1px 2px rgba(0, 0, 0, 0.05);
  outline: none;
  -webkit-appearance: none;
  appearance: none;
  transition: background-color var(--trans-dur) var(--trans-timing);
  will-change: background-color;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
}

.switch__input:checked {
  background-color: var(--text-secondary);
}

.switch__icon--outer {
  position: absolute;
  top: 50%;
  left: 5px;
  width: 10px;
  height: 10px;
  color: var(--text-secondary);
  pointer-events: none;
  transform: translateY(-50%);
  transition: color var(--trans-dur) var(--trans-timing), opacity 0.2s ease;
  will-change: color, opacity;
}

.switch__icon--outer:nth-of-type(2) {
  left: auto;
  right: 5px;
}

.switch__input:checked ~ .switch__icon--outer:first-of-type {
  opacity: 0.5;
}

.switch__input:not(:checked) ~ .switch__icon--outer:nth-of-type(2) {
  opacity: 0.5;
}

.switch__input:checked ~ .switch__icon--outer:nth-of-type(2),
.switch__input:not(:checked) ~ .switch__icon--outer:first-of-type {
  color: var(--accent-color);
  opacity: 1;
}

.switch__inner {
  position: absolute;
  top: 50%;
  left: 3px;
  width: 34px;
  height: 14px;
  overflow: hidden;
  border-radius: 14px;
  pointer-events: none;
  transform: translateY(-50%);
}

.switch__gradient {
  display: block;
  width: 18px;
  height: 100%;
  background: linear-gradient(90deg, var(--accent-color), rgba(var(--accent-color-rgb), 0.8));
  border-radius: 14px;
  transform: translateX(0);
  transition: transform var(--trans-dur) var(--trans-timing);
  will-change: transform;
}

.switch__input:checked ~ .switch__inner .switch__gradient {
  transform: translateX(16px);
}

.switch__inner-icons {
  position: absolute;
  top: 50%;
  left: 3px;
  width: 34px;
  height: 14px;
  pointer-events: none;
  transform: translateY(-50%);
}

.switch__icon--inner {
  position: absolute;
  top: 50%;
  left: 4px;
  width: 10px;
  height: 10px;
  color: #ffffff;
  transform: translateX(0) translateY(-50%);
  transition: transform var(--trans-dur) var(--trans-timing), opacity 0.2s ease;
  will-change: transform, opacity;
}

.switch__icon--inner:nth-child(2) {
  left: auto;
  right: 4px;
  transform: translateX(0) translateY(-50%);
}

.switch__input:checked ~ .switch__inner-icons .switch__icon--inner:first-of-type {
  transform: translateX(-16px) translateY(-50%);
  opacity: 0;
}

.switch__input:checked ~ .switch__inner-icons .switch__icon--inner:nth-of-type(2) {
  transform: translateX(0) translateY(-50%);
  opacity: 1;
}

.switch__input:not(:checked) ~ .switch__inner-icons .switch__icon--inner:first-of-type {
  transform: translateX(0) translateY(-50%);
  opacity: 1;
}

.switch__input:not(:checked) ~ .switch__inner-icons .switch__icon--inner:nth-of-type(2) {
  transform: translateX(16px) translateY(-50%);
  opacity: 0;
}

.switch__input:hover,
.switch__input:focus-visible {
  box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.1), inset 0 -1px 2px rgba(0, 0, 0, 0.05), 0 0 8px rgba(var(--accent-color-rgb), 0.5);
}

.switch__sr {
  overflow: hidden;
  position: absolute;
  width: 1px;
  height: 1px;
}

@media (max-width: 768px) {
  .content-wrapper {
    flex-direction: column;
  }
  .toc-nav {
    position: static;
    width: 100%;
    max-height: none;
    padding-right: 0;
    margin-bottom: 2rem;
  }
  .main-content {
    max-width: 100%;
  }
  .header-meta {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
  .meta-info {
    flex-direction: column;
    gap: 0.25rem;
  }
  footer.footer {
    max-width: 100%;
    margin: 2rem 0 0;
    margin-left: 0;
    flex-wrap: wrap;
    text-align: center;
    justify-content: center;
  }
  footer.footer > div {
    margin-bottom: 1rem;
  }
}






(function () {
  // Theme Switch Setup
  if (!document.querySelector('.theme-switch')) {
    const toggleHTML = `
      <svg display="none">
        <symbol id="light" viewBox="0 0 24 24">
          <g stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="12" y1="16" x2="12" y2="19" transform="rotate(0,12,12)" />
            <line x1="12" y1="16" x2="12" y2="19" transform="rotate(45,12,12)" />
            <line x1="12" y1="16" x2="12" y2="19" transform="rotate(90,12,12)" />
            <line x1="12" y1="16" x2="12" y2="19" transform="rotate(135,12,12)" />
            <line x1="12" y1="16" x2="12" y2="19" transform="rotate(180,12,12)" />
            <line x1="12" y1="16" x2="12" y2="19" transform="rotate(225,12,12)" />
            <line x1="12" y1="16" x2="12" y2="19" transform="rotate(270,12,12)" />
            <line x1="12" y1="16" x2="12" y2="19" transform="rotate(315,12,12)" />
          </g>
          <circle fill="currentColor" cx="12" cy="12" r="4" />
        </symbol>
        <symbol id="dark" viewBox="0 0 24 24">
          <path fill="currentColor" d="M15.5,15c-3.2-0.6-5.8-3.2-6.3-6.2C8.9,7,9.2,5.2,10,3.8c0.5-0.9-0.3-1.8-1.2-1.5C4.5,3.8,1.6,7.8,1.8,12.5c0.2,5.3,4.6,9.7,9.9,9.9c4.7,0.2,8.9-2.7,10.3-6.9c0.3-0.9-0.6-1.8-1.5-1.3C19,15,17.2,15.3,15.5,15z" />
        </symbol>
      </svg>
      <div class="theme-switch">
        <label class="switch">
          <input class="switch__input" type="checkbox" role="switch" id="switch" name="dark" />
          <svg class="switch__icon switch__icon--outer" width="10px" height="10px" aria-hidden="true">
            <use href="#light" />
          </svg>
          <svg class="switch__icon switch__icon--outer" width="10px" height="10px" aria-hidden="true">
            <use href="#dark" />
          </svg>
          <span class="switch__inner">
            <span class="switch__gradient"></span>
          </span>
          <span class="switch__inner-icons">
            <svg class="switch__icon switch__icon--inner" width="10px" height="10px" aria-hidden="true">
              <use href="#light" />
            </svg>
            <svg class="switch__icon switch__icon--inner" width="10px" height="10px" aria-hidden="true">
              <use href="#dark" />
            </svg>
          </span>
          <span class="switch__sr">Dark Mode</span>
        </label>
      </div>
    `;
    document.body.insertAdjacentHTML('afterbegin', toggleHTML);
  }

  const themeSwitch = document.getElementById('switch');
  const rootElement = document.documentElement;
  const copyEl = document.getElementById('copyright-year');
  const savedTheme = localStorage.getItem('theme');

  if (savedTheme === 'dark') {
    rootElement.setAttribute('data-theme', 'dark');
    themeSwitch.checked = true;
  }

  if (copyEl) {
    copyEl.textContent = new Date().getFullYear();
  }

  function debounce(func, wait) {
    let timeout;
    return function (...args) {
      clearTimeout(timeout);
      timeout = setTimeout(() => func.apply(this, args), wait);
    };
  }

  const toggleTheme = () => {
    requestAnimationFrame(() => {
      if (themeSwitch.checked) {
        rootElement.setAttribute('data-theme', 'dark');
        localStorage.setItem('theme', 'dark');
      } else {
        rootElement.removeAttribute('data-theme');
        localStorage.setItem('theme', 'light');
      }
    });
  };

  themeSwitch.addEventListener('change', debounce(toggleTheme, 100));

  // Smooth scrolling for TOC links
  const tocLinks = document.querySelectorAll('.toc-nav a');
  tocLinks.forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      const targetId = link.getAttribute('href').substring(1);
      const targetSection = document.getElementById(targetId);
      if (targetSection) {
        window.scrollTo({
          top: targetSection.offsetTop - 20,
          behavior: 'smooth'
        });
      }
    });
  });

  // Table of Contents Scroll Highlighting
  const sections = Array.from(tocLinks).map(link => {
    const id = link.getAttribute('href').substring(1);
    return document.getElementById(id);
  }).filter(section => section !== null);

  const observerOptions = {
    root: null,
    rootMargin: '0px 0px -50% 0px',
    threshold: 0
  };

  const observerCallback = (entries) => {
    entries.forEach(entry => {
      const id = entry.target.getAttribute('id');
      const tocLink = document.querySelector(`.toc-nav a[href="#${id}"]`);
      if (entry.isIntersecting) {
        tocLinks.forEach(link => link.classList.remove('active'));
        tocLink.classList.add('active');
      }
    });
  };

  const observer = new IntersectionObserver(observerCallback, observerOptions);
  sections.forEach(section => observer.observe(section));

  // Lazy-load YouTube videos
  const videoContainers = document.querySelectorAll('.video-container');
  videoContainers.forEach(container => {
    const videoId = container.getAttribute('data-video-id');
    const videoTitle = container.getAttribute('data-video-title');

    // Create thumbnail and play button
    const thumbnail = document.createElement('div');
    thumbnail.classList.add('video-thumbnail');
    thumbnail.style.backgroundImage = `url('https://img.youtube.com/vi/${videoId}/hqdefault.jpg')`;

    const playButton = document.createElement('button');
    playButton.classList.add('play-button');
    playButton.innerHTML = `
      <svg viewBox="0 0 24 24" fill="currentColor">
        <path d="M8 5v14l11-7z"/>
      </svg>
    `;
    playButton.setAttribute('aria-label', `Play video: ${videoTitle}`);

    thumbnail.appendChild(playButton);
    container.appendChild(thumbnail);

    // Load video on click
    playButton.addEventListener('click', () => {
      const iframe = document.createElement('iframe');
      iframe.setAttribute('src', `https://www.youtube.com/embed/${videoId}?autoplay=1`);
      iframe.setAttribute('title', videoTitle);
      iframe.setAttribute('frameborder', '0');
      iframe.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share');
      iframe.setAttribute('referrerpolicy', 'strict-origin-when-cross-origin');
      iframe.setAttribute('allowfullscreen', '');

      // Replace thumbnail with iframe
      container.innerHTML = '';
      container.appendChild(iframe);

      // Add playing class for animation
      container.classList.add('playing');
    });
  });
})();
